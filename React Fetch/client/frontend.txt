----- FILE: .\src\components\Filters.jsx -----
export default function Filters() {
  return (
    <aside className="sticky top-24 rounded-xl border border-stone-800 bg-[#20160F] p-6 h-fit">
      <h2 className="text-2xl font-bold text-stone-100">Filtros</h2>

      <div className="mt-4 space-y-6">
        <section>
          <h3 className="text-sm font-semibold text-stone-300 mb-2">Marca</h3>
          <div className="space-y-2">
            {["Harmony", "Silver Creek", "Blue Ridge", "Recording King"].map((m) => (
              <label key={m} className="flex items-center gap-2 text-stone-300">
                <input
                  type="checkbox"
                  className="h-4 w-4 rounded border-stone-600 bg-transparent text-amber-500 focus:ring-amber-500"
                  defaultChecked={m === "Blue Ridge"}
                />
                <span className="text-sm">{m}</span>
              </label>
            ))}
          </div>
        </section>

        <section>
          <h3 className="text-sm font-semibold text-stone-300 mb-2">Tipo de Madera</h3>
          <div className="space-y-2 text-stone-300 text-sm">
            {["Caoba", "Abeto", "Palosanto"].map((m) => (
              <label key={m} className="flex items-center gap-2">
                <input type="checkbox" className="h-4 w-4 rounded border-stone-600 bg-transparent text-amber-500 focus:ring-amber-500" />
                {m}
              </label>
            ))}
          </div>
        </section>

        <section>
          <h3 className="text-sm font-semibold text-stone-300 mb-2">Color</h3>
          <div className="space-y-2 text-stone-300 text-sm">
            {["Natural", "Sunburst", "Negro"].map((c) => (
              <label key={c} className="flex items-center gap-2">
                <input type="checkbox" className="h-4 w-4 rounded border-stone-600 bg-transparent text-amber-500 focus:ring-amber-500" />
                {c}
              </label>
            ))}
          </div>
        </section>

        <section>
          <h3 className="text-sm font-semibold text-stone-300 mb-2">Rango de Precios</h3>
          <input
            type="range"
            min="100"
            max="3000"
            defaultValue="800"
            className="h-1.5 w-full cursor-pointer appearance-none rounded-full bg-stone-700"
          />
          <div className="mt-2 flex justify-between text-xs text-stone-500">
            <span>$100</span>
            <span>$3000</span>
          </div>
        </section>
      </div>
    </aside>
  );
}

----- FILE: .\src\components\Footer.jsx -----
import { Link } from "react-router-dom";

export default function Footer() {
  return (
    <footer className="mt-16 border-t border-primary/20 bg-background-light dark:border-primary/30 dark:bg-background-dark">
      <div className="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8 py-8">
        <nav className="flex flex-wrap justify-center gap-x-8 gap-y-4 text-center">
          <Link
            className="text-sm text-stone-600 hover:text-primary dark:text-stone-400 dark:hover:text-primary"
            to="/catalog"
          >
            Tienda
          </Link>
          <Link
             className="text-sm text-stone-600 hover:text-primary dark:text-stone-400 dark:hover:text-primary"
             to="/faq"
>
  Preguntas Frecuentes
</Link>


          <Link
            className="text-sm text-stone-600 hover:text-primary dark:text-stone-400 dark:hover:text-primary"
            to="/about"
          >
            Sobre Nosotros
          </Link>

          <Link
            className="text-sm text-stone-600 hover:text-primary dark:text-stone-400 dark:hover:text-primary"
            to="/contact"
          >
            Contacto
          </Link>
        </nav>

        <p className="mt-8 text-center text-sm text-stone-500 dark:text-stone-500">
          Â© {new Date().getFullYear()} String &amp; Soul. Todos los derechos reservados.
        </p>
      </div>
    </footer>
  );
}

----- FILE: .\src\components\NavBar.jsx -----
import { Link, useNavigate } from "react-router-dom";
import { useState } from "react";
import { useShop } from "../context/ShopContext.jsx";

export default function NavBar() {
  const [query, setQuery] = useState("");
  const navigate = useNavigate();
  const { state } = useShop();

  const count = (state?.cart ?? []).reduce((n, it) => n + (it.qty ?? it.quantity ?? 1), 0);

  const handleSearch = (e) => {
    e.preventDefault();
    const q = query.trim();
    if (q) navigate(`/search?q=${encodeURIComponent(q)}`); // <â€” antes iba a /catalog
  };

  return (
    <header className="fixed inset-x-0 top-0 z-50 border-b border-stone-200 bg-background-light/80 backdrop-blur-sm dark:border-stone-800 dark:bg-background-dark/80">
      <div className="mx-auto flex max-w-8xl items-center justify-between px-4 py-3 sm:px-6 lg:px-8">
        <Link to="/" className="flex items-center gap-3">
          <svg className="h-6 w-6 text-primary" fill="currentColor" viewBox="0 0 24 24">
            <path d="M14.25 2.25a.75.75 0 0 0-.75.75v18a.75.75 0 0 0 .75.75h4.5a.75.75 0 0 0 .75-.75V3a.75.75 0 0 0-.75-.75h-4.5ZM15 3.75h3v16.5h-3V3.75Z" />
            <path d="M4.5 3.75a.75.75 0 0 0-.75.75v15a.75.75 0 0 0 .75.75h4.5a.75.75 0 0 0 .75-.75V4.5a.75.75 0 0 0-.75-.75h-4.5ZM5.25 5.25h3v13.5h-3V5.25Z" />
          </svg>
          <h1 className="text-xl font-bold text-stone-900 dark:text-white">String &amp; Soul</h1>
        </Link>

        <nav className="flex gap-10">
          <Link to="/catalog" className="text-sm font-medium text-white hover:text-primary">CatÃ¡logo</Link>
          <Link to="/catalog?cat=electric" className="text-sm font-medium text-white hover:text-primary">Electric</Link>
          <Link to="/catalog?cat=acoustic" className="text-sm font-medium text-white hover:text-primary">Acoustic</Link>
          <Link to="/catalog?cat=bass" className="text-sm font-medium text-white hover:text-primary">Bass</Link>
        </nav>

        <div className="flex items-center gap-3">
          <form onSubmit={handleSearch} className="relative w-44 sm:w-52 lg:w-64">
            <input
              type="text"
              value={query}
              onChange={(e) => setQuery(e.target.value)}
              placeholder="Buscar guitarras..."
              className="w-full rounded-md border border-stone-300 bg-transparent py-1.5 pl-9 pr-3 text-sm text-stone-800 placeholder-stone-500 focus:border-primary focus:ring-1 focus:ring-primary dark:border-stone-700 dark:text-white dark:placeholder-stone-400"
            />
            <svg className="absolute left-2 top-1.5 h-5 w-5 text-stone-500" fill="none" stroke="currentColor" strokeWidth="2" viewBox="0 0 24 24">
              <path strokeLinecap="round" strokeLinejoin="round" d="M21 21l-4.35-4.35m0 0A7.5 7.5 0 1110.65 3a7.5 7.5 0 016 13.65z" />
            </svg>
          </form>

          <Link to="/login" className="rounded-md px-3 py-2 text-sm font-medium text-stone-700 hover:bg-primary/10 dark:text-stone-200">Iniciar sesiÃ³n</Link>
          <Link to="/register" className="rounded-md bg-primary px-3 py-2 text-sm font-semibold text-white hover:opacity-95">Registrarse</Link>

          <Link to="/cart" className="relative rounded p-2 text-stone-600 hover:bg-primary/10 dark:text-stone-300" aria-label="Carrito">
            <svg fill="currentColor" width="20" height="20" viewBox="0 0 256 256">
              <path d="M222.14,58.87A8,8,0,0,0,216,56H54.68L49.7,27.44A8,8,0,0,0,42,24H16a8,8,0,0,0,0,16H34.29l30.36,139.86A28,28,0,1,0,116,204h76a28,28,0,1,0,27.14-39.13L199.09,88h11.78A8,8,0,0,0,222.14,58.87Z" />
            </svg>
            {count > 0 && (
              <span className="absolute -right-1 -top-1 min-w-[18px] rounded-full bg-primary px-1.5 text-center text-[10px] font-bold leading-4 text-white animate-bounce">
                {count}
              </span>
            )}
          </Link>
          <Link
            to="/account"
            className="relative rounded-full p-2 text-stone-600 hover:bg-primary/10 dark:text-stone-300"
            aria-label="Perfil de usuario"
          >
            <svg
              fill="currentColor"
              width="20"
              height="20"
              viewBox="0 0 24 24"
            >
              <path d="M12 2a5 5 0 0 1 5 5v1a5 5 0 1 1-10 0V7a5 5 0 0 1 5-5zm0 10a4 4 0 0 0-4 4v3h8v-3a4 4 0 0 0-4-4z" />
            </svg>
          </Link>
          
        </div>
      </div>
    </header>
  );
}

----- FILE: .\src\components\Pagination.jsx -----
import { Link } from "react-router-dom";

export default function Pagination({ page, totalPages, makeHref }) {
  const windowSize = 1; // muestra pÃ¡gina actual +-1 como en la ref
  const pages = [];
  for (let i = Math.max(1, page - windowSize); i <= Math.min(totalPages, page + windowSize); i++) {
    pages.push(i);
  }

  return (
    <nav className="flex items-center gap-3 text-sm">
      <Link
        to={makeHref(Math.max(1, page - 1))}
        className="px-3 py-1 rounded-md border border-stone-700 text-stone-300 hover:bg-stone-800"
      >
        &lt;
      </Link>

      {page - windowSize > 1 && <span className="text-stone-500">â€¦</span>}

      {pages.map((n) =>
        n === page ? (
          <span key={n} className="px-3 py-1 rounded-md bg-amber-600 text-white font-semibold">{n}</span>
        ) : (
          <Link
            key={n}
            to={makeHref(n)}
            className="px-3 py-1 rounded-md border border-stone-700 text-stone-300 hover:bg-stone-800"
          >
            {n}
          </Link>
        )
      )}

      {page + windowSize < totalPages && <span className="text-stone-500">â€¦</span>}

      <Link
        to={makeHref(Math.min(totalPages, page + 1))}
        className="px-3 py-1 rounded-md border border-stone-700 text-stone-300 hover:bg-stone-800"
      >
        &gt;
      </Link>
    </nav>
  );
}

----- FILE: .\src\components\ProductCard.jsx -----
import { Link } from "react-router-dom";

export default function ProductCard({ p }) {
  const price = Number(p?.price ?? 0);
  const fmt = n =>
    new Intl.NumberFormat("en-US", { style: "currency", currency: "USD", maximumFractionDigits: 0 }).format(n);

  return (
    <article className="w-full max-w-[340px]">
      <Link to={`/product/${p.id}`} className="block">
        <div className="rounded-xl bg-[#F8D0B3] overflow-hidden">
          <div className="aspect-[4/5] w-full">
            <img
              src={p.image || p.images?.[0]}
              alt={p.name}
              className="h-full w-full object-cover"
              loading="lazy"
            />
          </div>
          <div className="h-1.5 w-2/3 mx-auto -mt-2 mb-3 rounded-full bg-black/20" />
        </div>
      </Link>

      <div className="px-1 pt-2">
        <Link to={`/product/${p.id}`} className="text-[13px] leading-tight text-stone-200 hover:underline">
          {p.name}
        </Link>
        <div className="mt-1 text-[13px] font-semibold text-amber-500">{fmt(price)}</div>
        <Link
          to={`/product/${p.id}`}
          className="mt-2 inline-flex w-full items-center justify-center rounded-lg bg-amber-600 px-4 py-2 text-[12px] font-semibold text-white hover:bg-amber-500"
        >
          AÃ±adir al carrito
        </Link>
      </div>
    </article>
  );
}

----- FILE: .\src\context\ShopContext.jsx -----
// src/context/ShopContext.jsx
import {createContext, useContext, useEffect, useMemo, useReducer} from 'react'
import {api, priceWithDiscount} from '../data/mockApi'

const ShopCtx = createContext(null)
const initial = {
  products: [],
  filters: {q:'', cat:'all', min:0, max:99999},
  cart: [], // {id,name,price,discount,qty}
  status: 'idle', error: null
}

function reducer(state, action){
  switch(action.type){
    case 'SET_PRODUCTS': return {...state, products: action.payload}
    case 'SET_FILTERS': return {...state, filters:{...state.filters, ...action.payload}}
    case 'ADD':{
      const p=action.payload
      const i=state.cart.find(x=>x.id===p.id)
      return {...state, cart: i? state.cart.map(x=>x.id===p.id? {...x, qty:x.qty+1}:x)
                                 : [...state.cart, {id:p.id,name:p.name,price:p.price,discount:p.discount||0,qty:1}]}
    }
    case 'REMOVE': return {...state, cart: state.cart.filter(i=>i.id!==action.payload)}
    case 'SET_QTY':{
      const {id,qty}=action.payload
      return {...state, cart: state.cart.map(i=>i.id===id? {...i, qty:qty||1}:i)}
    }
    case 'CLEAR': return {...state, cart: []}
    case 'STATUS': return {...state, status: action.payload.status, error: action.payload.error||null}
    default: return state
  }
}

export function ShopProvider({children}){
  const [state, dispatch] = useReducer(reducer, initial)

  useEffect(()=>{ api.list().then(ps=>dispatch({type:'SET_PRODUCTS', payload:ps})) },[])

  const filtered = useMemo(()=>{
    const {q,cat,min,max}=state.filters
    return state.products
      .filter(p=>p.stock>0)
      .filter(p=>cat==='all'||p.category===cat)
      .filter(p=>p.name.toLowerCase().includes(q.toLowerCase()))
      .filter(p=>{ const pr=priceWithDiscount(p); return pr>=min && pr<=max })
  },[state.products,state.filters])

  const total = useMemo(()=> state.cart
    .reduce((t,i)=> t + Math.round(i.price*(1-i.discount/100))*i.qty,0), [state.cart])

  const value = {
    state, dispatch, filtered, total,
    priceWithDiscount,
    api // para Admin y Detail
  }
  return <ShopCtx.Provider value={value}>{children}</ShopCtx.Provider>
}
export const useShop = ()=> useContext(ShopCtx)

----- FILE: .\src\pages\About.jsx -----
export default function About() {
  return (
    <main className="bg-background-light dark:bg-background-dark text-stone-800 dark:text-stone-200">
      <div className="mx-auto max-w-5xl px-4 sm:px-6 lg:px-8 py-16">
        <header className="text-center">
          <h1 className="text-4xl sm:text-5xl lg:text-6xl font-extrabold tracking-tight">
            Sobre Nosotros
          </h1>
          <p className="mt-4 text-lg text-stone-600 dark:text-stone-400">
            La historia detrÃ¡s de cada acorde.
          </p>
        </header>

        <section className="mt-16 space-y-12">
          <div>
            <h2 className="text-3xl font-bold text-primary text-center">Nuestra Historia</h2>
            <p className="mt-4 text-lg leading-relaxed text-stone-600 dark:text-stone-400 text-center">
              String & Soul naciÃ³ de una pasiÃ³n compartida por la mÃºsica y la artesanÃ­a de las guitarras.
              Lo que comenzÃ³ como un pequeÃ±o taller se convirtiÃ³ en un punto de encuentro para la comunidad,
              con instrumentos de calidad y un trato cercano.
            </p>
          </div>

          <div className="grid gap-12 border-t border-primary/20 dark:border-primary/30 pt-12 md:grid-cols-2">
            <div>
              <h3 className="text-3xl font-bold text-primary">MisiÃ³n y VisiÃ³n</h3>
              <p className="mt-4 text-lg leading-relaxed text-stone-600 dark:text-stone-400">
                <strong>MisiÃ³n:</strong> Inspirar y equipar a mÃºsicos de todos los niveles con
                instrumentos y servicio excepcionales.
              </p>
              <p className="mt-2 text-lg leading-relaxed text-stone-600 dark:text-stone-400">
                <strong>VisiÃ³n:</strong> Ser el destino de referencia para los amantes de la guitarra,
                preservando el legado y fomentando nuevas generaciones.
              </p>
            </div>

            <div>
              <h3 className="text-3xl font-bold text-primary">Nuestros Valores</h3>
              <ul className="mt-4 list-disc list-inside space-y-2 text-lg text-stone-600 dark:text-stone-400">
                <li><strong>Autenticidad:</strong> Cada guitarra tiene una historia.</li>
                <li><strong>Comunidad:</strong> Un lugar para conectar mediante la mÃºsica.</li>
                <li><strong>Calidad:</strong> EstÃ¡ndares altos de sonido y artesanÃ­a.</li>
                <li><strong>PasiÃ³n:</strong> Vivimos la mÃºsica en todo lo que hacemos.</li>
              </ul>
            </div>
          </div>
        </section>
      </div>
    </main>
  );
}

----- FILE: .\src\pages\Account.jsx -----
import { Link } from "react-router-dom";

export default function Account() {
  // Temporal: datos de ejemplo. Reemplazar con datos reales del contexto auth cuando exista.
  const user = { name: "Usuario Ejemplo", email: "usuario@ejemplo.com", memberSince: "2024" };

  return (
    <div className="flex min-h-[70vh] items-start justify-center px-4 py-12 sm:py-20">
      <div className="w-full max-w-6xl">
        <div className="grid gap-6 md:grid-cols-3">
          {/* Perfil */}
          <div className="rounded-xl bg-[#14100b] p-6">
            <div className="flex flex-col items-center gap-4 text-center">
              <div className="flex h-28 w-28 items-center justify-center rounded-full bg-stone-100 text-2xl font-semibold text-stone-700 dark:bg-stone-700 dark:text-white">
                {user.name.split(" ").map(n => n[0]).slice(0,2).join("")}
              </div>
              <div>
                <h3 className="text-lg font-semibold text-stone-900 dark:text-white">{user.name}</h3>
                <p className="text-sm text-stone-600 dark:text-stone-300">{user.email}</p>
                <p className="mt-1 text-xs text-stone-500 dark:text-stone-400">Miembro desde {user.memberSince}</p>
              </div>

              <div className="mt-4 flex w-full flex-col gap-2">
                <Link
                  to="/account/edit"
                  className="w-full rounded-md border border-stone-200 px-3 py-2 text-center text-sm dark:border-stone-700"
                >
                  Editar perfil
                </Link>
                <button className="w-full rounded-md bg-red-600 px-3 py-2 text-sm font-semibold text-white">
                  Cerrar sesiÃ³n
                </button>
              </div>
            </div>
          </div>

          {/* Info / Pedidos / Preferencias */}
          <div className="md:col-span-2 rounded-xl bg-[#14100b] p-6">
            <h3 className="mb-4 text-lg font-semibold text-stone-900 dark:text-white">Mi cuenta</h3>

            <div className="space-y-4">
              <div className="flex items-center justify-between rounded-md border border-stone-100 p-4 dark:border-stone-700">
                <div>
                  <p className="text-sm text-stone-600 dark:text-stone-300">DirecciÃ³n por defecto</p>
                  <p className="mt-1 text-sm font-medium text-stone-900 dark:text-white">No hay direcciÃ³n registrada</p>
                </div>
                <Link to="/account/addresses" className="text-sm text-primary hover:underline">Gestionar</Link>
              </div>

              <div className="flex items-center justify-between rounded-md border border-stone-100 p-4 dark:border-stone-700">
                <div>
                  <p className="text-sm text-stone-600 dark:text-stone-300">Pedidos recientes</p>
                  <p className="mt-1 text-sm font-medium text-stone-900 dark:text-white">No hay pedidos recientes</p>
                </div>
                <Link to="/orders" className="text-sm text-primary hover:underline">Ver pedidos</Link>
              </div>

              <div className="rounded-md border border-stone-100 p-4 dark:border-stone-700">
                <p className="text-sm text-stone-600 dark:text-stone-300">Preferencias</p>
                <div className="mt-3 flex gap-3">
                  <button className="rounded-md border border-stone-200 px-3 py-1 text-sm text-black dark:text-black dark:border-stone-700">
                    Email
                  </button>
                  <button className="rounded-md border border-stone-200 px-3 py-1 text-sm text-black dark:text-black dark:border-stone-700">
                    SMS
                  </button>
                </div>
              </div>
            </div>

          </div>
        </div>
      </div>
    </div>
  );
}

----- FILE: .\src\pages\AdminProducts.jsx -----
// src/pages/AdminProducts.jsx
import {useEffect, useState} from 'react'
import {useShop} from '../context/ShopContext'
import {v4 as uuid} from 'uuid'
export default function AdminProducts(){
  const {state:{products}, api} = useShop()
  const [list,setList]=useState([])
  const [form,setForm]=useState({name:'',price:0,stock:0,category:'elÃ©ctrica',images:[''],description:'',discount:0})
  const load=()=> api.list().then(setList)
  useEffect(load,[])
  const submit=async(e)=>{ e.preventDefault()
    const data=form.id? form : {...form, id: uuid()}
    await (form.id? api.update(data): api.create(data))
    setForm({name:'',price:0,stock:0,category:'elÃ©ctrica',images:[''],description:'',discount:0})
    load()
  }
  const edit=(p)=> setForm({...p})
  const del=async(id)=>{ await api.remove(id); load() }

  return (
    <section style={{padding:16,display:'grid',gridTemplateColumns:'1fr 1fr',gap:16}}>
      <form onSubmit={submit}>
        <h3>{form.id?'Editar':'Nuevo'} producto</h3>
        <input placeholder="Nombre" value={form.name} onChange={e=>setForm({...form,name:e.target.value})}/>
        <input type="number" placeholder="Precio" value={form.price} onChange={e=>setForm({...form,price:+e.target.value})}/>
        <input type="number" placeholder="Stock" value={form.stock} onChange={e=>setForm({...form,stock:+e.target.value})}/>
        <input placeholder="CategorÃ­a" value={form.category} onChange={e=>setForm({...form,category:e.target.value})}/>
        <input placeholder="URL imagen" value={form.images[0]||''} onChange={e=>setForm({...form,images:[e.target.value]})}/>
        <input type="number" placeholder="Descuento %" value={form.discount} onChange={e=>setForm({...form,discount:+e.target.value})}/>
        <textarea placeholder="DescripciÃ³n" value={form.description} onChange={e=>setForm({...form,description:e.target.value})}/>
        <button type="submit">Guardar</button>
      </form>

      <div>
        <h3>Publicaciones</h3>
        {(list.length?list:products).map(p=>(
          <div key={p.id} style={{display:'grid',gridTemplateColumns:'80px 1fr 120px 80px 80px',gap:8,alignItems:'center',marginBottom:8}}>
            <img src={p.images?.[0]} alt="" style={{width:80,height:60,objectFit:'cover'}}/>
            <div>{p.name}</div>
            <div>${p.price} â€¢ Stock {p.stock}</div>
            <button onClick={()=>edit(p)}>Editar</button>
            <button onClick={()=>del(p.id)}>Eliminar</button>
          </div>
        ))}
      </div>
    </section>
  )
}

----- FILE: .\src\pages\CartPage.jsx -----
import { Link, useNavigate } from "react-router-dom";
import { useShop } from "../context/ShopContext.jsx";

const fmt = (n) =>
  new Intl.NumberFormat("es-AR", {
    style: "currency",
    currency: "USD",
    minimumFractionDigits: 0,
  }).format(Number(n || 0));

export default function CartPage() {
  const { state, dispatch, priceWithDiscount } = useShop();
  const nav = useNavigate();

  const items = state.cart ?? [];
  const subtotal = items.reduce((t, i) => t + priceWithDiscount(i) * i.qty, 0);
  const setQty = (id, qty) =>
    dispatch({ type: "SET_QTY", payload: { id, qty: Math.max(1, qty | 0) } });

  // ---- helper: obtiene imagen confiable para cada item ----
  const getItemImage = (item) => {
    const prod =
      state.products?.find((p) => String(p.id) === String(item.id)) || null;
    return (
      item.image ||
      item.images?.[0] ||
      prod?.image ||
      prod?.images?.[0] ||
      "" // ponÃ© aquÃ­ un placeholder si querÃ©s, ej: "/img/placeholder.jpg"
    );
  };

  return (
    <main className="bg-background-light text-white dark:bg-background-dark">
      <div className="mx-auto max-w-7xl px-6 py-10 lg:px-8">
        {/* Migas */}
        <p className="text-sm text-stone-400">
          <Link to="/catalog" className="hover:text-primary">Tienda</Link>
          <span className="mx-2">/</span>
          Carrito
        </p>

        <h1 className="mt-2 text-4xl font-extrabold">Carrito de compras</h1>

        {/* ===== Layout principal en 12 columnas ===== */}
        <div className="mt-10 grid gap-8 lg:[grid-template-columns:minmax(0,1fr)_360px]">
          {/* LISTA (izquierda) */}
          <aside className="lg:col-start-1 lg:row-start-1 lg:sticky lg:top-24 h-max bg-transparent border-none rounded-none p-0">
            <section className="lg:col-span-8">
              {items.length ? (
                <ul className="divide-y divide-white/10">
                  {items.map((i) => {
                    const img = getItemImage(i);
                    return (
                      <li key={i.id} className="py-6 first:border-t first:border-white/10">
                        <div className="grid grid-cols-[96px,1fr,auto] items-center gap-6">
                          <Link
                            to={`/product/${i.id}`}
                            className="h-24 w-24 overflow-hidden rounded-lg bg-stone-800"
                          >
                            <img
                              src={img}
                              alt={i.name}
                              loading="lazy"
                              className="h-full w-full object-cover"
                            />
                          </Link>

                          <div className="flex flex-col gap-2">
                            <Link
                              to={`/product/${i.id}`}
                              className="text-lg font-semibold hover:text-primary"
                            >
                              {i.name}
                            </Link>
                            <p className="text-sm text-stone-400">{i.category}</p>

                            <div className="mt-1 flex items-center gap-3">
                              <button
                                onClick={() => setQty(i.id, i.qty - 1)}
                                className="flex items-center justify-center h-8 w-8 rounded-full ring-1 ring-primary/30 hover:bg-primary/20"
                                aria-label="disminuir"
                              >
                                âˆ’
                              </button>
                              <input
                                value={i.qty}
                                onChange={(e) =>
                                  setQty(i.id, Number(e.target.value))
                                }
                                className="w-12 rounded-md border border-primary/20 bg-transparent p-1 text-center"
                              />
                              <button
                                onClick={() => setQty(i.id, i.qty + 1)}
                                className="flex items-center justify-center h-8 w-8 rounded-full ring-1 ring-primary/30 hover:bg-primary/20"
                                aria-label="aumentar"
                              >
                                +
                              </button>

                              <button
                                onClick={() =>
                                  dispatch({ type: "REMOVE", payload: i.id })
                                }
                                className="ml-3 text-sm text-stone-400 hover:text-primary"
                              >
                                Quitar
                              </button>
                            </div>
                          </div>

                          <p className="text-right text-lg font-semibold">
                            {fmt(priceWithDiscount(i) * i.qty)}
                          </p>
                        </div>
                      </li>
                    );
                  })}
                </ul>
              ) : (
                <div className="rounded-xl border border-white/10 p-8 text-center text-stone-300">
                  Carrito vacÃ­o.{" "}
                  <Link className="text-primary" to="/catalog">
                    Ir a la tienda
                  </Link>
                </div>
              )}
            </section>
          </aside>

          {/* RESUMEN (derecha) */}
          <aside className="lg:col-start-2 lg:row-start-1 lg:sticky lg:top-24 h-max rounded-xl border border-primary/20 bg-primary/5 p-6">
            <h2 className="mb-4 text-lg font-bold">Resumen del pedido</h2>

            <div className="space-y-3 text-sm">
              <div className="flex justify-between">
                <span className="text-stone-300">Subtotal</span>
                <span className="font-medium">{fmt(subtotal)}</span>
              </div>
              <div className="flex justify-between">
                <span className="text-stone-300">EnvÃ­o</span>
                <span className="font-medium">Gratis</span>
              </div>
              <div className="flex justify-between">
                <span className="text-stone-300">Impuestos</span>
                <span className="font-medium">{fmt(0)}</span>
              </div>
            </div>

            <div className="my-6 h-px bg-primary/20" />

            <div className="flex justify-between text-lg font-bold">
              <span>Total</span>
              <span>{fmt(subtotal)}</span>
            </div>

            <button
              disabled={!items.length}
              onClick={() => nav("/checkout")}
              className="mt-6 w-full rounded-lg bg-primary py-3 text-sm font-bold text-white shadow-lg shadow-primary/20 transition hover:brightness-105 disabled:opacity-50"
            >
              Continuar al pago
            </button>
          </aside>
        </div>
      </div>
    </main>
  );
}

----- FILE: .\src\pages\Catalog.jsx -----
import { useMemo } from "react";
import { useLocation } from "react-router-dom";
import Filters from "../components/Filters.jsx";
import ProductCard from "../components/ProductCard.jsx";
import { useShop } from "../context/ShopContext.jsx";

const norm = (s = "") => s.toLowerCase().normalize("NFD").replace(/\p{Diacritic}/gu, "");
const CAT = { acoustic: "acÃºstica", electric: "elÃ©ctrica", bass: "bajo", classical: "clÃ¡sica" };

export default function Catalog() {
  const { state } = useShop();
  const { search } = useLocation();
  const sp = useMemo(() => new URLSearchParams(search), [search]);

  const catSlug = sp.get("cat") || "all";
  const wanted = catSlug !== "all" ? norm(CAT[catSlug] || catSlug) : "";

  const title =
    catSlug === "acoustic" ? "Guitarras AcÃºsticas" :
    catSlug === "electric" ? "Guitarras ElÃ©ctricas" :
    catSlug === "bass" ? "Bajos" :
    catSlug === "classical" ? "Guitarras ClÃ¡sicas" : "CatÃ¡logo";

  const products = useMemo(() => {
    const list = state?.products ?? [];
    if (!wanted) return list;
    return list.filter((p) => norm(p.category || "").includes(wanted));
  }, [state?.products, wanted]);

  return (
    <main className="mx-auto max-w-8x1 px-6 py-10">
      <div className="grid gap-8 grid-cols-[280px,1fr]">
        <Filters />
        <section>
          <h1 className="text-4xl font-bold text-stone-100 mb-8">{title}</h1>

          {/* Ajuste de la grilla */}
          <div className="grid gap-8 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-5">
            {products.map((p) => (
              <ProductCard key={p.id} p={p} />
            ))}
          </div>
        </section>
      </div>
    </main>
  );
}

----- FILE: .\src\pages\Checkout.jsx -----
import { useNavigate } from "react-router-dom";
import { useShop } from "../context/ShopContext.jsx";
import { useState } from "react";

export default function Checkout() {
  const { state, dispatch } = useShop();
  const nav = useNavigate();
  const [form, setForm] = useState({ email: "", store: "", name: "", last: "" });

  const onSubmit = (e) => {
    e.preventDefault();
    if (!state.cart.length) return;
    // Guardar datos del formulario
  sessionStorage.setItem("checkout.email", form.email);
  sessionStorage.setItem("checkout.store", form.store);
  sessionStorage.setItem("checkout.name", form.name);
  sessionStorage.setItem("checkout.last", form.last);
    
  nav("/payment");
  };

  return (
  <div className="flex min-h-[80vh] items-center justify-center">
    <main className="w-full max-w-3xl p-4 sm:p-6 lg:p-8">
      <h1 className="text-3xl font-bold">InformaciÃ³n</h1>

      <form onSubmit={onSubmit} className="mt-8 space-y-8">
        <section>
          <h2 className="text-xl font-semibold">Contacto</h2>
          <input
            type="email"
            required
            placeholder="Email"
            value={form.email}
            onChange={e => setForm({ ...form, email: e.target.value })}
            className="mt-3 w-full rounded-lg border bg-transparent px-4 py-3"
          />
          <label className="mt-3 flex items-center gap-2 text-sm opacity-80">
            <input type="checkbox" className="h-4 w-4 rounded" />
            Mantenerme al dÃ­a sobre ofertas.
          </label>
        </section>

        <section>
          <h2 className="text-xl font-semibold">Retiro en Sucursal</h2>
          <select
            required
            value={form.store}
            onChange={e => setForm({ ...form, store: e.target.value })}
            className="mt-3 w-full rounded-lg border bg-transparent px-4 py-3"
          >
            <option value="" disabled>Seleccione una sucursal</option>
            <option value="Centro">Centro</option>
            <option value="Norte">Norte</option>
            <option value="Sur">Sur</option>
          </select>

          <div className="mt-3 grid grid-cols-1 gap-3 sm:grid-cols-2">
            <input
              required
              placeholder="Nombre"
              value={form.name}
              onChange={e => setForm({ ...form, name: e.target.value })}
              className="rounded-lg border bg-transparent px-4 py-3"
            />
            <input
              required
              placeholder="Apellido"
              value={form.last}
              onChange={e => setForm({ ...form, last: e.target.value })}
              className="rounded-lg border bg-transparent px-4 py-3"
            />
          </div>
        </section>

        <button
          type="submit"
          disabled={!state.cart.length}
          className="w-full rounded-lg bg-primary px-6 py-3 font-semibold text-white hover:bg-primary/80 disabled:opacity-50"
        >
          Continuar al pago
        </button>
      </form>
    </main>
  </div>
);
}

----- FILE: .\src\pages\CheckoutFinal.jsx -----
import { useMemo } from "react";
import { Link, useNavigate } from "react-router-dom";
import { useShop } from "../context/ShopContext.jsx";

const fmt = (n) =>
  new Intl.NumberFormat("es-AR", {
    style: "currency",
    currency: "USD",
    minimumFractionDigits: 0,
  }).format(Number(n || 0));

export default function CheckoutFinal() {
  const { state, dispatch, priceWithDiscount } = useShop();
  const nav = useNavigate();

  const items = state.cart ?? [];
  const subtotal = useMemo(
    () => items.reduce((t, it) => t + priceWithDiscount(it) * (it.qty || 1), 0),
    [items, priceWithDiscount]
  );

  // datos persistidos
  const rawMethod = localStorage.getItem("payment.method") || "";
  const last4 = localStorage.getItem("payment.last4") || "";
  const store = sessionStorage.getItem("checkout.store") || "A confirmar en sucursal";
  const email = sessionStorage.getItem("checkout.email") || "â€”";

  // normaliza mÃ©todos posibles
  const methodMap = {
    credit: "credit",
    debit: "debit",
    cash: "cash",
    credito: "credit",
    debito: "debit",
    efectivo: "cash",
  };
  const method = methodMap[rawMethod] || "cash";

  // etiqueta final
  const methodLabel =
    method === "cash"
      ? "Efectivo al entregar"
      : `Tarjeta ${method === "debit" ? "de dÃ©bito" : "de crÃ©dito"}${
          last4 ? ` terminada en ${last4}` : ""
        }`;

  const onConfirm = () => {
    dispatch({ type: "CLEAR" });
    // limpia persistencia
    localStorage.removeItem("payment.method");
    localStorage.removeItem("payment.last4");
    sessionStorage.removeItem("checkout.store");
    sessionStorage.removeItem("checkout.email");
    sessionStorage.removeItem("checkout.name");
    sessionStorage.removeItem("checkout.last");
    
    // muestra mensaje de confirmaciÃ³n
    Swal.fire({
      title: 'Â¡Compra realizada!',
      text: 'Tu pedido fue confirmado con Ã©xito.',
      icon: 'success',
      confirmButtonText: 'Aceptar',
      confirmButtonColor: '#b86614', // tu color principal
      background: '#2c1f13ff',         // fondo oscuro
      color: '#f8f7f6',              // texto claro
      backdrop: 'rgba(0,0,0,0.6)',   // oscurece el fondo detrÃ¡s del modal

    }).then(() => {
      // redirige al menÃº principal una vez cerrado
      nav("/");
    });
  };

  return (
    <main className="bg-background-light text-white dark:bg-background-dark">
      <div className="mx-auto max-w-7xl px-6 py-10 lg:px-8">
        <h1 className="text-4xl font-extrabold">Checkout</h1>

        <div className="mt-10 grid gap-12 lg:grid-cols-2">
          {/* Columna izquierda: resumen de productos */}
          <section>
            <h2 className="mb-4 border-b border-primary/20 pb-2 text-xl font-semibold dark:border-primary/30">
              Resumen del pedido
            </h2>

            <ul className="divide-y divide-primary/20 dark:divide-primary/30">
              {items.map((it) => {
                const img = it.image || it.images?.[0];
                const totalItem = priceWithDiscount(it) * (it.qty || 1);
                return (
                  <li key={it.id} className="py-4">
                    <div className="grid grid-cols-[80px,1fr,auto] items-center gap-4">
                      <Link
                        to={`/product/${it.id}`}
                        className="h-20 w-20 overflow-hidden rounded-lg bg-stone-800"
                      >
                        {img ? (
                          <img
                            src={img}
                            alt={it.name}
                            className="h-full w-full object-cover"
                          />
                        ) : null}
                      </Link>

                      <div>
                        <Link
                          to={`/product/${it.id}`}
                          className="font-semibold hover:text-primary"
                        >
                          {it.name}
                        </Link>
                        <p className="text-sm text-stone-400">
                          {it.category} Â· Cant: {it.qty || 1}
                        </p>
                      </div>

                      <div className="text-right font-semibold">
                        {fmt(totalItem)}
                      </div>
                    </div>
                  </li>
                );
              })}
            </ul>

            <div className="mt-4 space-y-2 border-t border-primary/20 pt-4 dark:border-primary/30">
              <div className="flex justify-between text-base">
                <span>Subtotal</span>
                <span>{fmt(subtotal)}</span>
              </div>
              <div className="flex justify-between text-base">
                <span>EnvÃ­o</span>
                <span>Gratis</span>
              </div>
              <div className="flex justify-between border-t border-primary/20 pt-2 text-lg font-bold dark:border-primary/30">
                <span>Total</span>
                <span>{fmt(subtotal)}</span>
              </div>
              {method === "cash" && (
                <p className="text-sm text-amber-300/90">
                  RecordÃ¡ tener billetes en buen estado y, en lo posible, el
                  monto justo.
                </p>
              )}
            </div>
          </section>

          {/* Columna derecha: datos de retiro + mÃ©todo de pago */}
          <aside>
            <section className="space-y-6">
              <div>
                <h3 className="mb-3 border-b border-primary/20 pb-2 text-xl font-semibold dark:border-primary/30">
                  Retiro en sucursal
                </h3>
                <div className="rounded-lg border border-primary/20 p-4 dark:border-primary/30">
                  <p className="text-sm text-stone-300">Sucursal</p>
                  <p className="font-medium">{store}</p>
                  <p className="mt-2 text-sm text-stone-300">Contacto</p>
                  <p className="font-medium">{email}</p>
                </div>
              </div>

              <div>
                <h3 className="mb-3 border-b border-primary/20 pb-2 text-xl font-semibold dark:border-primary/30">
                  MÃ©todo de pago
                </h3>
                <div className="flex items-center justify-between rounded-lg bg-primary/10 p-4 dark:bg-primary/20">
                  <p className="font-medium">{methodLabel}</p>
                  <Link
                    to="/payment"
                    className="text-sm text-primary hover:opacity-90"
                  >
                    Cambiar
                  </Link>
                </div>
              </div>

              <button
                onClick={onConfirm}
                className="w-full rounded-lg bg-primary py-3 text-sm font-bold text-white hover:bg-primary/90"
              >
                Confirmar pedido
              </button>
            </section>
          </aside>
        </div>
      </div>
    </main>
  );
}

----- FILE: .\src\pages\Contact.jsx -----
export default function Contact() {
  return (
    <main className="bg-background-light dark:bg-background-dark text-stone-800 dark:text-stone-200">
      <div className="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8 py-16">
        <h1 className="text-4xl sm:text-5xl lg:text-6xl font-extrabold text-center">Contact Us</h1>
        <p className="mt-4 text-center text-stone-500 dark:text-stone-400">
          Weâ€™re here to help. Reach out with any questions or feedback.
        </p>

        {/* 2 columnas lado a lado a partir de md */}
        <div className="mt-12 grid grid-cols-1 md:grid-cols-2 gap-12 lg:gap-16 items-start">
          {/* Formulario (izquierda) */}
          <form className="rounded-xl bg-primary/10 p-8 dark:bg-primary/20 space-y-4">
            <h2 className="text-2xl font-bold">Send us a message</h2>
            <div>
              <label className="block text-sm mb-1">Your Name</label>
              <input className="w-full rounded-md border border-primary/30 bg-background-light dark:bg-background-dark p-3" />
            </div>
            <div>
              <label className="block text-sm mb-1">Your Email</label>
              <input type="email" className="w-full rounded-md border border-primary/30 bg-background-light dark:bg-background-dark p-3" />
            </div>
            <div>
              <label className="block text-sm mb-1">Subject</label>
              <input className="w-full rounded-md border border-primary/30 bg-background-light dark:bg-background-dark p-3" />
            </div>
            <div>
              <label className="block text-sm mb-1">Message</label>
              <textarea rows="5" className="w-full rounded-md border border-primary/30 bg-background-light dark:bg-background-dark p-3" />
            </div>
            <button type="submit" className="w-full rounded-lg bg-primary py-3 font-semibold text-white hover:bg-primary/90">
              Send Message
            </button>
          </form>

          {/* Info + mapa (derecha) */}
          <div className="space-y-10">
            <section>
              <h3 className="text-xl font-bold">Contact Information</h3>
              <div className="mt-3 space-y-1 text-stone-600 dark:text-stone-400">
                <p><strong>Phone:</strong> (555) 123-4567</p>
                <p><strong>Email:</strong> contacto@stringandsoul.com</p>
              </div>
            </section>

            <section>
              <h3 className="text-xl font-bold">Our Location</h3>
              <div className="mt-4 h-[360px] w-full overflow-hidden rounded-xl ring-1 ring-white/10">
                <iframe
                  src="https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d105073.45340254843!2d-58.51569879470437!3d-34.61565476986264!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x95bcca3b4ef90cbd%3A0xa0b3812e88e88e87!2sBuenos%20Aires%2C%20Cdad.%20Aut%C3%B3noma%20de%20Buenos%20Aires!5e0!3m2!1ses-419!2sar!4v1760569650881!5m2!1ses-419!2sar"
                  width="100%" height="100%" style={{ border: 0 }}
                  allowFullScreen="" loading="lazy" referrerPolicy="no-referrer-when-downgrade"
                />
              </div>
              <p className="mt-3 text-stone-500 dark:text-stone-400">
                Visit us in the heart of Buenos Aires.
              </p>
            </section>
          </div>
        </div>
      </div>
    </main>
  );
}

----- FILE: .\src\pages\FAQ.jsx -----
// src/pages/FAQ.jsx
import { useRef, useState, useEffect } from "react";

function Item({ i, q, a, active, onToggle }) {
  const ref = useRef(null);
  const [h, setH] = useState(0);
  useEffect(() => { if (ref.current) setH(active ? ref.current.scrollHeight : 0); }, [active]);

  return (
    <div className="overflow-hidden rounded-xl ring-1 ring-primary/20 bg-transparent">
      {/* header sin blanco */}
      <button
        onClick={() => onToggle(i)}
        aria-expanded={active}
        aria-controls={`faq-${i}`}
        className="flex w-full items-center justify-between px-5 py-4 bg-transparent hover:bg-primary/10 text-left"
      >
        <span className="font-semibold text-primary">{q}</span>
        <svg
          className={`h-5 w-5 text-primary transition-transform ${active ? "rotate-180" : ""}`}
          viewBox="0 0 256 256" fill="currentColor"
        >
          <path d="M213.7 101.7l-80 80a8 8 0 01-11.4 0l-80-80A8 8 0 0153.7 90.3L128 164.7l74.3-74.4a8 8 0 0111.4 11.4z"/>
        </svg>
      </button>

      {/* panel con mismo tono, no blanco */}
      <div
        id={`faq-${i}`}
        style={{ height: h }}
        className="overflow-hidden transition-[height] duration-300 ease-out bg-primary/10"
      >
        <div ref={ref} className="px-7 pt-7 pb-7 text-stone-300">
          {a}
        </div>
      </div>
    </div>
  );
}

export default function FAQ() {
  const faqs = [
    { q: "Â¿CÃ³mo hago un pedido?", a: "AgregÃ¡ productos al carrito y continuÃ¡ al checkout." },
    { q: "Â¿QuÃ© mÃ©todos de pago aceptan?", a: "Tarjetas de crÃ©dito, dÃ©bito y PayPal." },
    { q: "Â¿Puedo cancelar mi pedido?", a: "SÃ­, dentro de las 24 h si aÃºn no fue enviado." },
    { q: "Â¿CuÃ¡nto tarda el envÃ­o?", a: "EnvÃ­o estÃ¡ndar 3â€“7 dÃ­as hÃ¡biles segÃºn tu zona." },
    { q: "Â¿Tienen garantÃ­a?", a: "GarantÃ­a limitada por defectos de fÃ¡brica." },
  ];
  const [open, setOpen] = useState(null);
  const toggle = (i) => setOpen((v) => (v === i ? null : i));

  return (
    <main className="bg-background-light dark:bg-background-dark text-stone-200">
      <div className="mx-auto max-w-3xl px-4 sm:px-6 lg:px-8 py-14">
        <h1 className="text-4xl font-extrabold text-center">Preguntas Frecuentes</h1>
        <p className="mt-3 text-center text-stone-400">
          Â¿No encontrÃ¡s tu respuesta? Escribinos a <a className="text-primary" href="mailto:soporte@stringandsoul.com">soporte@stringandsoul.com</a>.
        </p>

        <div className="mt-8 space-y-4">
          {faqs.map((f, i) => (
            <Item key={i} i={i} q={f.q} a={f.a} active={open === i} onToggle={toggle} />
          ))}
        </div>
      </div>
    </main>
  );
}

----- FILE: .\src\pages\Home.jsx -----
import { Link } from "react-router-dom";

export default function Home() {
  return (
    <main className="flex-1">
      {/* HERO */}
      <section className="py-16 md:py-30">
        <div className="mx-auto w-8xl px-4 sm:px-6 lg:px-8">
          <div
            className="relative flex min-h-[600px] items-center justify-center overflow-hidden rounded-xl bg-cover bg-center p-8 text-center"
            style={{
              backgroundImage:
                'linear-gradient(rgba(0,0,0,0.2), rgba(0,0,0,0.5)), url("https://lh3.googleusercontent.com/aida-public/AB6AXuBSfetmgcEEAPqxn90x0d4neJA5JipPFfgpYlgL4mU2dKmIghVxndjkaq_klTgQVjHsWal3yO9o1IKNbR_WlUwcOkVT5GxkLOArd0l_sbF4r81vrV8F4bLuy1emgFGZrWH8clsIvvJRXez3BSAE2C_YKuDPPTzCmDfFGBObaYgrttUmJjMSzuXO_0UcR7hSc9kbXRKJFZ2o8hfPZgYF82bWBjAj8WuE-KZY1mSHVbSfcwiAZBIOJMsOC3b_zDSfJAlIg1P17Bujblc")',
            }}
          >
            <div className="flex flex-col items-center gap-6">
              <div className="flex flex-col gap-2 text-white">
                <h1 className="text-4xl font-extrabold md:text-6xl">
                  Find Your Perfect Sound
                </h1>
                <p className="text-base font-light md:text-lg">
                  Explore our curated collection of guitars, crafted for every style and skill level.
                </p>
              </div>
              <Link
                to="/catalog"
                className="rounded-lg bg-primary px-8 py-3 text-base font-bold text-white transition hover:bg-primary/80"
              >
                Shop Now
              </Link>
            </div>
          </div>
        </div>
      </section>
   {/* FEATURED */}
<section className="py-12 md:py-16">
  <div className="mx-auto max-w-8xl px-4 sm:px-6 lg:px-8">
    <h2 className="text-2xl font-bold text-stone-900 dark:text-white">Featured Guitars</h2>

    <div className="mt-6 grid grid-cols-3 gap-6 md:grid-cols-2 lg:grid-cols-3">
      {[
        {
          title: "The 'Prairie Song' Acoustic",
          text: "Warm tones and classic design, perfect for folk and country.",
          img: "https://lh3.googleusercontent.com/aida-public/AB6AXuCbyAw1shFLNrByQTuJUfCswlhCQApIemwNPM1O9P_L30Gummo2qXrqGX4rpy-dSoC7iVKjZP6oZLtCwQ7txo_v5fKQbgJul8944hF7ZvFJor6rhY4wUIgT8GGsyOxEXChvybbfR2TGsR-t21WoBtNc4t14wzllEKCIxL-Zw6C-8t6px-9WpxdSo93y0jjPns69pWTI6hgeimgsjOhpgnLwkLndL9Oz7sTHVfCzOaQ66ft88TiyanXcoE8hENaJHnzAOKO8xcjQCDg",
        },
        {
          title: "The 'Midnight Rider' Electric",
          text: "Powerful sound and sleek design, ideal for rock and blues.",
          img: "https://lh3.googleusercontent.com/aida-public/AB6AXuDc3YoEwzEII_0C0dsYKn16VYxIJZR7WOgIxADOQ36c64hGUn1XhqMxDNAZhvPiPpOFllp6XHQ-eOgThgVclm02ZUnE7aNuxAgrTKfVTjMuydjVjNQAIaovP4PXuP531hRKBDkGGFH4BmiGweHxAxF85q_TDjuTkoYgsTg-aI4VKnYhMp0B1NlUCCJCiCzSvPnIfVxW-x8v5qUcnV_p2ytLQwkk0R0zi0q5X8YS1977ovB9aITY-rJx9K0FT_d3-BqvMiJkc6FXOLk",
        },
        {
          title: "The 'Thunder Road' Bass",
          text: "Deep, resonant bass with a comfortable feel for any genre.",
          img: "https://lh3.googleusercontent.com/aida-public/AB6AXuBMVm6UaGcXN1cCxCC9Hx6Cv6HTkhWExLmaCBubUrqrbtYSj8bgz7SlVA7cgjlSeuBu5mR3DobuEzhKFvnapIjF68bb2CZQjpDlltmLJ2oZpcS6JzFM4I7wPPLShxA5t8mDRnSYqsmwMmFjaOMTVaS79qf9deXtOXrRHNxTP76w6muc-Rwr1MD8X8kVvk63snTzlbL3ypF60ZkUX6z0g2lF60inSdAjCOUNngLqI314t2iEcn1E9TtJp78IM-qAxncnVx3BALf1kKA",
        },
      ].map((c) => (
        <article key={c.title} className="group overflow-hidden rounded-xl border border-white/10">
          <div className="h-56 md:h-64 w-full overflow-hidden">
            <img
              src={c.img}
              alt={c.title}
              className="h-full w-full object-cover transition-transform duration-300 group-hover:scale-105"
              loading="lazy"
            />
          </div>
          <div className="p-4">
            <h3 className="font-semibold text-stone-900 dark:text-white">{c.title}</h3>
            <p className="text-sm text-stone-600 dark:text-stone-400">{c.text}</p>
          </div>
        </article>
      ))}
    </div>
  </div>
</section>


{/* CATEGORIES */}
<section className="py-12 md:py-16">
  <div className="mx-auto max-w-8xl px-4 sm:px-6 lg:px-8">
    <h2 className="text-2xl font-bold text-stone-900 dark:text-white">Shop by Category</h2>

    <div className="mt-6 grid grid-cols-4 gap-6 md:grid-cols-4">
      {[
        {
          title: "Guitars",
          text: "Explore our range of guitars.",
          img: "https://lh3.googleusercontent.com/aida-public/AB6AXuDJrIylck-_TSgSDirpXHOfdt1uv835vHVw3odnmBaNB_lcYNckSLAlmFoK_eXrrsjG8C0c2irKLty2K5Nhfg_EyiYEy8EMTSo0Wy092fXNr2heG3F40q1hzqALMGnIZ6SdImImWd5aa5-yfmTvUgesyIJqiL4WBL1rvln95_YCA_M1eG4Mh-s55WU_B3XSiJuE8iIyxJH2ALWDJvzCdubVW7KA3wdaSOvU68T_B2_eBJUKqCnfGvujSmvero-vhOmSsvIRRpeiKZM",
          to: "/catalog?",
        },
        {
          title: "Electric Guitars",
          text: "Discover our selection of electric guitars.",
          img: "https://lh3.googleusercontent.com/aida-public/AB6AXuAZh1SmUPXygK5USePgwL7LPF4vHkS1QIHzyVbs1jbHXtQ-wJIkH2BoRPJwX1YKY9BAYfJ4sdru-FOtytDlZmyOyTv0i8bQUUBdnWmZ4fS2l_o243vL9gVU801I_5iGNMLb4u8xbtrS41hdOftpb2pPtoAjfvEv9cFH4R_Q50wBKFE8eD7RBACwRXLQSOBC8GsBMiar8wNKtq-r8gIKRB2Td7Byowz4F3pJ5QM3A8OtJ5sScjHAEcI6Sg0G7hLR2t_p_FdZz_MSLZE",
          to: "/catalog?cat=electric",
        },
        {
          title: "Bass Guitars",
          text: "Find the perfect bass guitar for your style.",
          img: "https://lh3.googleusercontent.com/aida-public/AB6AXuDqnpHQE5yhMjM5ZOSN1dQUs-aGIgzx4iMtTyk3J1pcIYwH8by3PyAx02riMLYf7OIn-KuP43RtnL_qNkIRzQS2Sv852HnAAlNFnUmZhF39yzc30W80GKjBhK2hhJl_PLvX0nsOgiWgCJYFRyUYwSywt0LUEPsIi9VGG_cDCtmyYejC72HEqFOmYAym8Iyv4If-5LaVNsF0ZwaVZ_56qtqe1ZN3fnrtW38IJbWFRDQ9HlnM4AeoGFLYZA-_IWU9mhQoLoIBaBGMWvA",
          to: "/catalog?cat=bass",
        },
        {
          title: "Acoustic Guitars",
          text: "Explore our range of acoustic guitars.",
          img: "https://lh3.googleusercontent.com/aida-public/AB6AXuDJrIylck-_TSgSDirpXHOfdt1uv835vHVw3odnmBaNB_lcYNckSLAlmFoK_eXrrsjG8C0c2irKLty2K5Nhfg_EyiYEy8EMTSo0Wy092fXNr2heG3F40q1hzqALMGnIZ6SdImImWd5aa5-yfmTvUgesyIJqiL4WBL1rvln95_YCA_M1eG4Mh-s55WU_B3XSiJuE8iIyxJH2ALWDJvzCdubVW7KA3wdaSOvU68T_B2_eBJUKqCnfGvujSmvero-vhOmSsvIRRpeiKZM",
          to: "/catalog?cat=acoustic",
        },
       
      ].map((c) => (
        <Link key={c.title} to={c.to} className="group block overflow-hidden rounded-xl">
          <div className="h-56 md:h-64 w-full overflow-hidden rounded-lg">
            <img
              src={c.img}
              alt={c.title}
              className="h-full w-full object-cover transition-transform duration-300 group-hover:scale-105"
              loading="lazy"
            />
          </div>
          <div className="mt-3">
            <h3 className="font-semibold text-stone-900 dark:text-white">{c.title}</h3>
            <p className="text-sm text-stone-600 dark:text-stone-400">{c.text}</p>
          </div>
        </Link>
      ))}
    </div>
  </div>
</section>
    </main>
  );
}


----- FILE: .\src\pages\Login.jsx -----
// src/pages/Login.jsx
import { Link } from "react-router-dom";

export default function Login() {
  return (
    <div className="flex min-h-[70vh] items-center justify-center px-4 py-12 sm:py-20">
      <div className="w-full max-w-xl">
        <div className="rounded-xl bg-[#14100b] p-6">
          <h2 className="mb-2 text-2xl font-semibold text-stone-900 dark:text-white">Bienvenido de nuevo</h2>
          <p className="mb-6 text-sm text-stone-600 dark:text-stone-300">Inicia sesiÃ³n con tu cuenta para continuar</p>

          <form className="space-y-6">
            <label className="block">
              <span className="text-sm text-stone-700 dark:text-stone-200">E-mail</span>
              <input
                type="email"
                name="email"
                required
                className="mt-1 block w-full rounded-md border border-stone-200 bg-white px-3 py-2 text-sm shadow-sm placeholder:text-stone-400 focus:outline-none focus:ring-2 focus:ring-primary dark:border-stone-700 dark:bg-stone-800 dark:text-stone-100"
                placeholder="tu@ejemplo.com"
              />
            </label>

            <label className="block">
              <span className="text-sm text-stone-700 dark:text-stone-200">ContraseÃ±a</span>
              <input
                type="password"
                name="password"
                required
                className="mt-1 block w-full rounded-md border border-stone-200 bg-white px-3 py-2 text-sm shadow-sm placeholder:text-stone-400 focus:outline-none focus:ring-2 focus:ring-primary dark:border-stone-700 dark:bg-stone-800 dark:text-stone-100"
                placeholder="â€¢â€¢â€¢â€¢â€¢â€¢â€¢â€¢"
              />
            </label>

            <div className="flex items-center justify-between">
              <label className="flex items-center gap-2 text-sm text-stone-700 dark:text-stone-300">
                <input type="checkbox" className="h-4 w-4 rounded border-stone-300 bg-white text-primary focus:ring-primary" />
                <span>Recordarme</span>
              </label>
              <Link to="#" className="text-sm text-primary hover:underline">Â¿Olvidaste la contraseÃ±a?</Link>
            </div>

            <button
              type="submit"
              className="w-full rounded-md bg-primary px-4 py-2 text-sm font-semibold text-white shadow-sm hover:opacity-95"
            >
              Iniciar sesiÃ³n
            </button>
          </form>

          <p className="mt-6 text-center text-sm text-stone-600 dark:text-stone-300">
            Â¿No tenÃ©s cuenta?{" "}
            <Link to="/register" className="font-medium text-primary hover:underline">
              Registrate
            </Link>
          </p>
        </div>
      </div>
    </div>
  );
}

----- FILE: .\src\pages\NotFound.jsx -----

----- FILE: .\src\pages\Payment.jsx -----
// src/pages/Payment.jsx
import { useState } from "react";
import { useNavigate } from "react-router-dom";
import { useShop } from "../context/ShopContext.jsx";

const fmt = (n) =>
  new Intl.NumberFormat("es-AR", {
    style: "currency",
    currency: "USD",
    minimumFractionDigits: 0,
  }).format(Number(n || 0));

export default function Payment() {
  const nav = useNavigate();
  const { state, priceWithDiscount } = useShop();

  const items = state.cart ?? [];
  const total = items.reduce((t, i) => t + priceWithDiscount(i) * i.qty, 0);

  const [method, setMethod] = useState("credit"); // "credit" | "debit" | "cash"
  const [card, setCard] = useState({ number: "", exp: "", cvv: "", name: "" });

 // Payment.jsx
const submit = (e) => {
  e.preventDefault();
  if (!items.length) return;

  // normaliza mÃ©todo: "credit" | "debit" | "cash"
  const m = method;

  // toma Ãºltimos 4 si es tarjeta
  const last4 =
    m === "cash"
      ? ""
      : (card.number || "").replace(/\D/g, "").slice(-4);

  localStorage.setItem("payment.method", m);
  localStorage.setItem("payment.last4", last4);

  nav("/checkout-final");
};



  return (
    <div className="flex min-h-[80vh] items-start justify-center">
      <main className="w-full max-w-3xl px-4 py-10 sm:px-6 lg:px-8">
        <h1 className="mb-6 text-3xl font-bold">MÃ©todo de pago</h1>

        <form onSubmit={submit} className="space-y-8">
          {/* MÃ©todos */}
          <div className="space-y-3">
            {[
              { id: "credit", label: "CrÃ©dito" },
              { id: "debit", label: "DÃ©bito" },
              { id: "cash",  label: "Efectivo al entregar" },
            ].map((opt) => (
              <label
                key={opt.id}
                className={`flex cursor-pointer items-center justify-between rounded-lg border px-4 py-4 ${
                  method === opt.id
                    ? "border-primary/60 bg-primary/10"
                    : "border-white/10 bg-transparent"
                }`}
              >
                <div className="flex items-center gap-3">
                  <input
                    type="radio"
                    name="method"
                    value={opt.id}
                    checked={method === opt.id}
                    onChange={() => setMethod(opt.id)}
                    className="h-4 w-4 accent-primary"
                  />
                  <span className="text-sm">{opt.label}</span>
                </div>
              </label>
            ))}
          </div>

          {/* Contenido por mÃ©todo */}
          {method === "cash" ? (
            <div className="rounded-lg border border-white/10 p-5">
              <div className="mb-3 flex items-center justify-between text-lg font-semibold">
                <span>Total</span>
                <span>{fmt(total)}</span>
              </div>
              <p className="text-sm opacity-80">
                RecordÃ¡ tener billetes en buen estado y pagar justo en lo posible.
              </p>
            </div>
          ) : (
            <div className="space-y-5">
              <div>
                <label className="mb-2 block text-sm opacity-80">NÃºmero de tarjeta</label>
                <input
                  inputMode="numeric"
                  placeholder="0000 0000 0000 0000"
                  value={card.number}
                  onChange={(e) => setCard((c) => ({ ...c, number: e.target.value }))}
                  className="w-full rounded-lg border border-white/10 bg-transparent px-4 py-3"
                  required={method !== "cash"}
                  disabled={method === "cash"}
                />
              </div>

              <div className="grid grid-cols-1 gap-4 sm:grid-cols-3">
                <div>
                  <label className="mb-2 block text-sm opacity-80">Vencimiento</label>
                  <input
                    placeholder="MM/AA"
                    value={card.exp}
                    onChange={(e) => setCard((c) => ({ ...c, exp: e.target.value }))}
                    className="w-full rounded-lg border border-white/10 bg-transparent px-4 py-3"
                    required={method !== "cash"}
                    disabled={method === "cash"}
                  />
                </div>
                <div>
                  <label className="mb-2 block text-sm opacity-80">CVV</label>
                  <input
                    placeholder="123"
                    value={card.cvv}
                    onChange={(e) => setCard((c) => ({ ...c, cvv: e.target.value }))}
                    className="w-full rounded-lg border border-white/10 bg-transparent px-4 py-3"
                    required={method !== "cash"}
                    disabled={method === "cash"}
                  />
                </div>
                <div>
                  <label className="mb-2 block text-sm opacity-80">Nombre en la tarjeta</label>
                  <input
                    placeholder="Nombre y Apellido"
                    value={card.name}
                    onChange={(e) => setCard((c) => ({ ...c, name: e.target.value }))}
                    className="w-full rounded-lg border border-white/10 bg-transparent px-4 py-3"
                    required={method !== "cash"}
                    disabled={method === "cash"}
                  />
                </div>
              </div>
            </div>
          )}

          <button
            type="submit"
            disabled={!items.length}
            className="w-full rounded-lg bg-primary py-3 font-semibold text-white hover:brightness-110 disabled:opacity-50"
          >
            Confirmar pago
          </button>
        </form>
      </main>
    </div>
  );
}

----- FILE: .\src\pages\ProductDetail.jsx -----
import { useParams } from "react-router-dom";
import { useShop } from "../context/ShopContext.jsx";

const fmt = (n) =>
  new Intl.NumberFormat("en-US", {
    style: "currency",
    currency: "USD",
    maximumFractionDigits: 0,
  }).format(Number(n || 0));

export default function ProductDetail() {
  const { id } = useParams();
  const { state, dispatch, priceWithDiscount } = useShop();
  const p = state.products.find((x) => String(x.id) === id);

  if (!p) {
    return (
      <main className="mx-auto max-w-7xl p-6">
        Producto no encontrado.
      </main>
    );
  }

  const hero = p.image || p.images?.[0];
  const thumbs = p.gallery?.length ? p.gallery : p.images?.slice(0, 3) || [];
  const final = priceWithDiscount(p);

return (
  <main className="w-full py-8">
    {/* Contenedor centrado con padding lateral */}
    <div className="mx-auto max-w-max-w-8xl px-10 sm:px-16 lg:px-24">
      <div className="grid gap-10 md:grid-cols-12">
        {/* GalerÃ­a (izquierda) */}
        <section className="md:col-span-6">
          <div className="overflow-hidden rounded-xl bg-stone-200 dark:bg-stone-800">
            <img
              src={hero}
              alt={p.name}
              className="w-full object-cover"
              style={{ aspectRatio: '5 / 3' }}
            />
          </div>

          {!!thumbs.length && (
            <div className="mt-4 grid grid-cols-3 gap-3">
              {thumbs.map((g, i) => (
                <div
                  key={i}
                  className="overflow-hidden rounded-lg bg-stone-200 dark:bg-stone-800"
                >
                  <img
                    src={g}
                    alt={`${p.name}-${i}`}
                    className="h-full w-full object-cover"
                    style={{ aspectRatio: '4 / 3' }}
                  />
                </div>
              ))}
            </div>
          )}
        </section>

        {/* InformaciÃ³n (derecha) */}
        <aside className="md:col-span-5">
          <h1 className="text-3xl font-bold">{p.name}</h1>

          <div className="mt-4">
            <div className="text-2xl font-extrabold text-primary">
              {fmt(final)}
            </div>
            {p.discount ? (
              <div className="text-sm opacity-60 line-through">{fmt(p.price)}</div>
            ) : null}
          </div>

          <div className="mt-5 flex gap-6">
            <button
              onClick={() => dispatch({ type: "ADD", payload: p })}
              className="rounded-lg bg-primary px-40 py-2 font-semibold text-white hover:bg-primary/80"
            >
              Add to Cart
            </button>
            <span className="self-center text-sm opacity-70">
              {p.stock > 0 ? `${p.stock} en stock` : "Sin stock"}
            </span>
          </div>

          {/* DescripciÃ³n */}
          <section className="mt-8">
            <h2 className="mb-2 text-lg font-bold">Description</h2>
            <p className="opacity-80">{p.short || p.description || "â€”"}</p>
          </section>

          {/* Especificaciones */}
          <section className="mt-8">
            <h2 className="mb-2 text-lg font-bold">Specifications</h2>
            <dl className="divide-y divide-white/10 rounded-lg">
              {[
                  ["Top Wood", p.topWood || p.woodTop],
                  ["Back & Sides", p.backSides || p.wood],
                  ["Neck", p.neck],
                  ["Fretboard", p.fretboard],
                  ["Scale", p.scale],
                  ["Nut Width", p.nutWidth],
                  ["Finish", p.finish],
                ]
                  .filter(([, v]) => v)
                  .map(([k, v], i) => (
                    <div
                      key={k}
                      className={`grid grid-cols-2 gap-4 px-4 py-3 ${
                        i === 0 ? "border-t border-white/10" : ""
                      } border-b border-white/10`}
                    >
                      <dt className="opacity-70">{k}</dt>
                      <dd className="text-right">{v}</dd>
                    </div>
                  ))}
            </dl>
          </section>
        </aside>

        {/* Reviews abajo, a todo el ancho */}
        <section className="md:col-span-12 mt-8">
          <h2 className="text-lg font-bold mb-3">Customer Reviews</h2>

          {/* Si hay reviews */}
          {p.reviews && p.reviews.length > 0 ? (
            <>
              {/* CalificaciÃ³n promedio + distribuciÃ³n */}
              {(() => {
                const total = p.reviews.length;
                const avg =
                  p.reviews.reduce((sum, r) => sum + r.rating, 0) / total;
                const counts = [5, 4, 3, 2, 1].map(
                  (n) => p.reviews.filter((r) => r.rating === n).length
                );
                return (
                  <div className="mt-4 grid gap-4 rounded-lg border border-white/10 p-4 md:grid-cols-[160px,1fr]">
                    {/* Promedio */}
                    <div>
                      <div className="text-3xl font-bold">
                        {avg.toFixed(1)}
                      </div>
                      <div className="text-sm opacity-70">
                        based on {total} review{total !== 1 ? "s" : ""}
                      </div>
                    </div>

                    {/* Barras por estrellas */}
                    <div className="space-y-2">
                      {[5, 4, 3, 2, 1].map((n, i) => {
                        const percent =
                          total > 0 ? (counts[i] / total) * 100 : 0;
                        return (
                          <div
                            key={n}
                            className="flex items-center gap-3"
                          >
                            <span className="w-6 text-sm">{n}â˜…</span>
                            <div className="h-2 flex-1 rounded bg-stone-700">
                              <div
                                className="h-2 rounded bg-amber-500 transition-all"
                                style={{ width: `${percent}%` }}
                              />
                            </div>
                            <span className="w-10 text-right text-xs opacity-70">
                              {percent.toFixed(0)}%
                            </span>
                          </div>
                        );
                      })}
                    </div>
                  </div>
                );
              })()}

              {/* Lista de comentarios */}
              <div className="mt-6 space-y-4">
                {p.reviews.map((r, i) => (
                  <div
                    key={i}
                    className="rounded-lg border border-white/10 p-4 shadow-sm"
                  >
                    <div className="flex items-center justify-between mb-1">
                      <h4 className="font-semibold">{r.user}</h4>
                      <div className="flex text-amber-500">
                        {Array.from({ length: 5 }).map((_, idx) => (
                          <span key={idx}>{idx < r.rating ? "â˜…" : "â˜†"}</span>
                        ))}
                      </div>
                    </div>
                    <p className="text-sm opacity-90">{r.comment}</p>
                    <p className="mt-1 text-xs opacity-60">{r.date}</p>
                  </div>
                ))}
              </div>
            </>
          ) : (
            // Si no hay reviews
            <div className="rounded-lg border border-white/10 p-4 text-sm opacity-80">
              TodavÃ­a no hay reseÃ±as para este producto.
            </div>
          )}
        </section>



      </div>
    </div>
  </main>
);
}

----- FILE: .\src\pages\Register.jsx -----
// src/pages/Register.jsx
import { Link } from "react-router-dom";

export default function Register() {
  return (
    <div className="flex min-h-[70vh] items-center justify-center px-4 py-12 sm:py-20">
      <div className="w-full max-w-xl">
        <div className="rounded-xl bg-[#14100b] p-6">
          <h2 className="mb-2 text-2xl font-semibold text-stone-900 dark:text-white">Crea tu cuenta</h2>
          <p className="mb-6 text-sm text-stone-600 dark:text-stone-300">RegÃ­strate para acceder a ventas, listas y tu cuenta</p>

          <form className="grid gap-6">
            <div>
              <label className="block text-sm text-stone-700 dark:text-stone-200">Nombre completo</label>
              <input type="text" required className="mt-1 block w-full rounded-md border border-stone-200 px-3 py-2 text-sm placeholder:text-stone-400 focus:outline-none focus:ring-2 focus:ring-primary dark:border-stone-700 dark:bg-stone-800 dark:text-stone-100" placeholder="Tu nombre" />
            </div>

            <div>
              <label className="block text-sm text-stone-700 dark:text-stone-200">E-mail</label>
              <input type="email" required className="mt-1 block w-full rounded-md border border-stone-200 px-3 py-2 text-sm placeholder:text-stone-400 focus:outline-none focus:ring-2 focus:ring-primary dark:border-stone-700 dark:bg-stone-800 dark:text-stone-100" placeholder="tu@ejemplo.com" />
            </div>

            <div className="grid gap-4 sm:grid-cols-2">
              <div>
                <label className="block text-sm text-stone-700 dark:text-stone-200">ContraseÃ±a</label>
                <input type="password" required className="mt-1 block w-full rounded-md border border-stone-200 px-3 py-2 text-sm placeholder:text-stone-400 focus:outline-none focus:ring-2 focus:ring-primary dark:border-stone-700 dark:bg-stone-800 dark:text-stone-100" placeholder="â€¢â€¢â€¢â€¢â€¢â€¢â€¢â€¢" />
              </div>
              <div>
                <label className="block text-sm text-stone-700 dark:text-stone-200">Confirmar contraseÃ±a</label>
                <input type="password" required className="mt-1 block w-full rounded-md border border-stone-200 px-3 py-2 text-sm placeholder:text-stone-400 focus:outline-none focus:ring-2 focus:ring-primary dark:border-stone-700 dark:bg-stone-800 dark:text-stone-100" placeholder="â€¢â€¢â€¢â€¢â€¢â€¢â€¢â€¢" />
              </div>
            </div>

            <button type="submit" className="mt-2 w-full rounded-md bg-primary px-4 py-2 text-sm font-semibold text-white shadow-sm hover:opacity-95">
              Crear cuenta
            </button>
          </form>

          <p className="mt-6 text-center text-sm text-stone-600 dark:text-stone-300">
            Â¿Ya tenÃ©s una cuenta?{" "}
            <Link to="/login" className="font-medium text-primary hover:underline">
              Iniciar sesiÃ³n
            </Link>
          </p>
        </div>
      </div>
    </div>
  );
}

----- FILE: .\src\pages\Search.jsx -----
import { useEffect, useMemo, useState } from "react";
import { useLocation, useNavigate, Link } from "react-router-dom";
import { useShop } from "../context/ShopContext.jsx";
import ProductCard from "../components/ProductCard.jsx";
import Pagination from "../components/Pagination.jsx";

const norm = (s = "") => s.toLowerCase().normalize("NFD").replace(/\p{Diacritic}/gu, "");

export default function Search() {
  const { state } = useShop();
  const nav = useNavigate();
  const { search } = useLocation();
  const sp = useMemo(() => new URLSearchParams(search), [search]);

  const qParam = sp.get("q") || "";
  const pageParam = Number(sp.get("page") || 1);

  const [q, setQ] = useState(qParam);
  useEffect(() => setQ(qParam), [qParam]);

  const results = useMemo(() => {
    const qn = norm(qParam);
    if (!qn) return [];
    return (state?.products ?? []).filter((p) => {
      const text = `${p.name} ${p.brand ?? ""} ${p.category ?? ""}`;
      return norm(text).includes(qn);
    });
  }, [state?.products, qParam]);

  // paginaciÃ³n
  const pageSize = 12;
  const total = results.length;
  const totalPages = Math.max(1, Math.ceil(total / pageSize));
  const page = Math.min(Math.max(1, pageParam), totalPages);
  const slice = results.slice((page - 1) * pageSize, page * pageSize);

  const onSubmit = (e) => {
    e.preventDefault();
    nav(`/search?q=${encodeURIComponent(q)}&page=1`);
  };

  return (
    <main className="mx-auto max-w-[1400px] px-6 py-10">
      <div className="grid gap-8 grid-cols-[280px,1fr]">
        {/* Sidebar visual para mantener la composiciÃ³n de la plantilla */}
        <aside className="rounded-xl border border-stone-800 bg-[#20160F] p-6 h-fit">
          <h2 className="text-xl font-bold text-stone-100">Filtrar por</h2>
          <div className="mt-6 text-stone-400 text-sm space-y-4">
            <section>
              <div className="font-semibold text-stone-300 mb-2">Marca</div>
              <ul className="space-y-2">
                {["Stringer", "Harmony", "Blue Ridge"].map((m) => (
                  <li key={m} className="flex items-center gap-2">
                    <input type="checkbox" className="h-4 w-4 rounded border-stone-600 bg-transparent text-amber-500" disabled />
                    {m}
                  </li>
                ))}
              </ul>
            </section>

            <section>
              <div className="font-semibold text-stone-300 mb-2">Tipo de Madera</div>
              <ul className="space-y-2 opacity-60">
                {["Caoba", "Arce", "Abeto"].map((m) => (
                  <li key={m} className="flex items-center gap-2">
                    <input type="checkbox" className="h-4 w-4 rounded border-stone-600" disabled />
                    {m}
                  </li>
                ))}
              </ul>
            </section>

            <section>
              <div className="font-semibold text-stone-300 mb-2">Color</div>
              <ul className="space-y-2 opacity-60">
                {["Natural", "Sunburst", "Negro"].map((m) => (
                  <li key={m} className="flex items-center gap-2">
                    <input type="checkbox" className="h-4 w-4 rounded border-stone-600" disabled />
                    {m}
                  </li>
                ))}
              </ul>
            </section>

            <section>
              <div className="font-semibold text-stone-300 mb-2">Rango de Precios</div>
              <input type="range" min="50" max="3000" defaultValue="800" className="h-1.5 w-full rounded-full bg-stone-700" disabled />
              <div className="mt-2 flex justify-between text-xs text-stone-500">
                <span>$50</span><span>$3000</span>
              </div>
            </section>
          </div>
        </aside>

        <section>
          <h1 className="text-4xl font-bold text-stone-100">Resultados de BÃºsqueda</h1>
          <p className="mt-2 text-sm text-stone-400">
            {qParam ? <>Mostrando resultados para <span className="italic">â€œ{qParam}â€</span></> : "Escribe un tÃ©rmino para buscar."}
          </p>


          {/* Grilla de resultados */}
          <div className="mt-10 grid gap-8 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4">
            {slice.map((p) => (
              <ProductCard key={p.id} p={p} />
            ))}
            {slice.length === 0 && <div className="text-stone-400">Sin resultados.</div>}
          </div>

          {/* PaginaciÃ³n */}
          {total > pageSize && (
            <div className="mt-8 flex items-center justify-center">
              <Pagination
                page={page}
                totalPages={totalPages}
                makeHref={(n) => `/search?q=${encodeURIComponent(qParam)}&page=${n}`}
              />
            </div>
          )}
        </section>
      </div>
    </main>
  );
}

----- FILE: .\src\App.jsx -----
import { Routes, Route, Navigate } from "react-router-dom";
import NavBar from "./components/NavBar.jsx";
import Home from "./pages/Home.jsx";
import Catalog from "./pages/Catalog.jsx";
import ProductDetail from "./pages/ProductDetail.jsx";
import CartPage from "./pages/CartPage.jsx";
import Checkout from "./pages/Checkout.jsx";
import Login from "./pages/Login.jsx";
import Register from "./pages/Register.jsx";
import Account from "./pages/Account.jsx";
import About from "./pages/About.jsx"; 
import Footer from "./components/Footer.jsx";
import Contact from "./pages/Contact.jsx";
import FAQ from "./pages/FAQ.jsx";
import Search from "./pages/Search.jsx";
import Payment from "./pages/Payment.jsx";
import CheckoutFinal from "./pages/CheckoutFinal.jsx";





export default function App() {
  return (
    <>
      <NavBar />
      <div className="pt-14">
        <Routes>
          <Route path="/" element={<Home />} />
          <Route path="/about" element={<About />} />
          <Route path="/catalog" element={<Catalog />} />
          <Route path="/product/:id" element={<ProductDetail />} />
          <Route path="/cart" element={<CartPage />} />
          <Route path="/payment" element={<Payment />} />   
          <Route path="/checkout" element={<Checkout />} />
          <Route path="/checkout-final" element={<CheckoutFinal />} />
          <Route path="/login" element={<Login />} />
          <Route path="/register" element={<Register />} />
          <Route path="/account" element={<Account />} />
          <Route path="/contact" element={<Contact />} />
          <Route path="/faq" element={<FAQ />} />
          <Route path="*" element={<Navigate to="/" replace />} />
           <Route path="/search" element={<Search />} />
        
        </Routes>
      </div>
      <Footer />
    </>
  );
}

----- FILE: .\src\main.jsx -----
import { StrictMode } from 'react'
import './styles/reset.css'
import { createRoot } from 'react-dom/client'
import { BrowserRouter } from 'react-router-dom'
import { ShopProvider } from './context/ShopContext.jsx'
import App from './App.jsx'
import './styles/index.css'

createRoot(document.getElementById('root')).render(
    <BrowserRouter>
      <ShopProvider>
        <App />
      </ShopProvider>
    </BrowserRouter>
)

----- FILE: .\index.html -----
<!doctype html>
<html class="dark" lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>String & Soul</title>
    <link rel="icon" type="image/x-icon" href="data:image/x-icon;base64," />
    <!-- Tailwind CDN + config -->
    <script src="https://cdn.tailwindcss.com?plugins=forms,container-queries"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link href="https://fonts.googleapis.com/css2?family=Newsreader:ital,opsz,wght@0,6..72,200..800;1,6..72,200..800&display=swap" rel="stylesheet" />
    <script>
      tailwind.config = {
        darkMode: "class",
        theme: {
          extend: {
            colors: {
              primary: "#b86614",
              "background-light": "#f8f7f6",
              "background-dark": "#211911",
            },
            fontFamily: { display: ["Newsreader"] },
            borderRadius: { DEFAULT: "0.25rem", lg: "0.5rem", xl: "0.75rem", full: "9999px" },
          },
        },
      };
    </script>
    <style>
      .no-scrollbar::-webkit-scrollbar{display:none}
      .no-scrollbar{ -ms-overflow-style:none; scrollbar-width:none }
    </style>
  </head>
  <body class="bg-background-light dark:bg-background-dark font-display text-stone-800 dark:text-stone-200">
    <div id="root"></div>
    <script type="module" src="/src/main.jsx"></script>
  </body>
</html>

